---
- name: Install required system packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - software-properties-common

- name: Create directory for Docker's offical GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Adding Docker's repository
  block:
    - name: Download Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /tmp/docker.gpg
        mode: '0644'

    - name: Add Docker's GPG key to APT keyring
      ansible.builtin.shell:
        cmd: |
          gpg --dearmor -o /etc/apt/keyrings/docker.gpg /tmp/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Add Docker's repository to Apt sources
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ deb_architecture[ansible_architecture] }} signed-by=/etc/apt/keyrings/docker.gpg] \
          https://download.docker.com/linux/ubuntu   {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

# Install Docker Engine latest version if "{{ version_string }}" is not defined
- name: Install Docker Engine
  ansible.builtin.apt:
    force: true
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - "docker-ce{{ '=' + version_string['ubuntu'] if version_string['ubuntu'] is defined and version_string['ubuntu'] != '' else '' }}"
    - "docker-ce-cli{{ '=' + version_string['ubuntu'] if version_string['ubuntu'] is defined and version_string['ubuntu'] != '' else '' }}"
    - "containerd.io"
    - "docker-buildx-plugin"
    - "docker-compose-plugin"
  notify:
    - Docker enable now
